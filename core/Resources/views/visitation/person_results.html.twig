{% extends '@KontrolgruppenCore/main/index.html.twig' %}

{% block content %}
    <div class="row">
        <div class="col-md-9 left-tables">
            <h1>{{ 'visitation.search.title'|trans }}</h1>

            <!-- Other tables aligned left -->
                {# Individual tables go here #}

                {# Adresse historik Table #}
                {% include '@KontrolgruppenCore/visitation/person_tables/adresse_historik.html.twig' with {'data': data} %}

                {# Bopælssamling Table #}
                {% include '@KontrolgruppenCore/visitation/person_tables/bopaelssamling.html.twig' %}

                {# Bolig Table #}
                {% include '@KontrolgruppenCore/visitation/person_tables/bolig.html.twig' %}

                {# Børn Table #}
                {% include '@KontrolgruppenCore/visitation/person_tables/boern.html.twig' %}

                {# Civilstatus Table #}
                {% include '@KontrolgruppenCore/visitation/person_tables/civil_status.html.twig' %}

                {# CPR historik Table #}
                {% include '@KontrolgruppenCore/visitation/person_tables/cpr_historik.html.twig' %}

                {# Navnehistorik Table #}
                {% include '@KontrolgruppenCore/visitation/person_tables/navnehistorik.html.twig' %}

                {# Statsborgerskab Table #}
                {% include '@KontrolgruppenCore/visitation/person_tables/statsborgerskab.html.twig' %}

                {# Virksomhed Table #}
                {% include '@KontrolgruppenCore/visitation/person_tables/virksomhed.html.twig' %}
                <div class="d-flex justify-content-between">
                <div></div>
                <div class="new-process">
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#">
                        {{ 'visitation.new.title'|trans }}
                    </button>
                </div>
            </div>
        </div>

        <!-- Stamdata Table aligned right -->
        <div class="col-md-3">
            <div class="fixed-table">
                <div class="card-header text-black stam-data">
                    <h6 class="mb-0" id="stam-data">
                        Stamdata
                    </h6>
                </div>
                <table class="table table-bordered">
                    <tbody class="stam-data-body">
                        <tr>
                            <td>Navn</td>
                            <td>{{ data.Person.Navne[0].Navn.fornavne }} {{ data.Person.Navne[0].Navn.efternavn }}</td>
                        </tr>
                        <tr>
                            <td>CPR</td>
                            <td id="cprField">{{ data.Person.Personnumre[0].Personnummer.personnummer }}</td>
                        </tr>
                        <tr>
                            <td>Adresse</td>
                            <td>{{ data.Person.Adresseoplysninger[0].Adresseoplysninger.CprAdresse.vejadresseringsnavn}} {{ data.Person.Navne[0].Navn.efternavn }}</td>
                        </tr>
                        <tr>
                            <td>Køn</td>
                            <td>{{ data.Person.koen }}</td>
                        </tr>
                        <tr>
                            <td>Eksisterende sager</td>
                            <td></td>
                        </tr>
                        {# Add more rows as needed #}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .new-process {
            margin-top: 20px;
            margin-bottom: 50px;
        }
        .fixed-table {
            position: fixed;
            top: 120px;
            right: 30px;
            width: 30%;
            z-index: 999;
        }
        .left-tables {
            max-width: 1000px;
        }
        .card-header {
            background-color:#c8defc ;
        }
        .card-header.active {
            background-color: #81b4fe;
        }
        .btn-header{
            color: black;
            font-weight: bold;
        }
        .btn-header:hover{
            font-weight: bold;
        }
        .btn-header:focus{
            text-decoration: none;
            box-shadow: none;
        }
        #stam-data{
            font-weight: bold;
        }
        .stam-data{
            background-color: #81b4fe;
        }
        .data-header{
            background-color: #d0dcfc;
        }
        .bg-light{
            background-color: #e8ecfc;
        }
        .stam-data-body{
            background-color: #e8ecfc;
        }
        .card-header.collapsed .fa-chevron-down {
            transform: rotate(90deg);
        }

        .card-header.active .fa-chevron-up {
            transform: rotate(-90deg);
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        function formatCprAndCalculateAge(cpr) {
            // Extract day, month, year, and 7th digit from the CPR number
            const day = cpr.substring(0, 2);
            const month = cpr.substring(2, 4);
            const year = cpr.substring(4, 6);
            const seventhDigit = parseInt(cpr.substring(6, 7), 10);
            const cprAgeTranslation = "{{ 'visitation.form.cpr_age'|trans }}";
            // Determine the correct century
            let fullYear;
            if (seventhDigit >= 0 && seventhDigit <= 3) {
                fullYear = `19${year}`;
            } else if (seventhDigit === 4) {
                fullYear = (parseInt(year, 10) >= 37) ? `19${year}` : `20${year}`;
            } else if (seventhDigit >= 5 && seventhDigit <= 8) {
                fullYear = (parseInt(year, 10) >= 58) ? `18${year}` : `20${year}`;
            } else if (seventhDigit === 9) {
                fullYear = (parseInt(year, 10) >= 37) ? `19${year}` : `20${year}`;
            }

            // Calculate the current age
            const today = new Date();
            const birthDate = new Date(`${fullYear}-${month}-${day}`);
            let age = today.getFullYear() - birthDate.getFullYear();
            const monthDifference = today.getMonth() - birthDate.getMonth();
            
            if (monthDifference < 0 || (monthDifference === 0 && today.getDate() < birthDate.getDate())) {
                age--;
            }

            // Format the CPR number
            const formattedCpr = `${day}${month}${year}-xxxx (${age} ${cprAgeTranslation})`;

            return formattedCpr;
        }

        $(document).ready(function() {
            const cprElement = document.getElementById("cprField");
            const originalCpr = cprElement.textContent;
            const formattedCprAndAge = formatCprAndCalculateAge(originalCpr);
            cprElement.textContent = formattedCprAndAge;

            $('.accordion .card-header').click(function() {
                $(this).find('i').toggleClass('fa-chevron-down fa-chevron-up');
            });
            $(document).ready(function() {
                $(".btn-header").click(function() {
                    $(this).closest(".card-header").toggleClass("collapsed active");
                    if($(this).closest(".card-header").hasClass("collapsed")){
                        // Ajax post request to log_visitation route, with data and cpr
                        $.ajax({
                            url: "{{ path('log_visitation') }}",
                            type: "POST",
                            data: {
                                table_name: $(this).closest(".card-header").attr("id"),
                                cpr: "{{ data.Person.Personnumre[0].Personnummer.personnummer }}",
                                visitation: "{{ visitation }}",
                            },
                            success: function(data) {
                                console.log(data);
                            }
                        });
                    }
                });
            });
        });
    </script>
{% endblock %}
